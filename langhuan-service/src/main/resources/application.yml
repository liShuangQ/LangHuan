server:
  port: 9077
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

mybatis:
  mapper-locations: classpath:mapper/*.xml
spring:
  task:
    scheduling:
      pool:
        size: 10
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  application:
    name: aiAgent
  # 基础属性配置
  ai:
    chat:
      client:
        enabled: true
    openai:
      base-url: xxx #oneapi 转换
      api-key: xxx
      chat:
        options:
          model: qwen-turbo
      embedding:
        options:
          model: text-embedding-v3
        base-url: xxx
        api-key: xxx
    vectorstore:
      pgvector:
        index-type: HNSW # 最近邻搜索索引类型，可选值为NONE（精确最近邻搜索）、IVFFlat（将向量划分为列表，然后搜索与查询向量最接近的子集，构建速度较快且内存使用较少，但查询性能较低）、HNSW（创建多层图，构建速度较慢且内存使用较多，但查询性能较好，无需训练步骤）
        distance-type: COSINE_DISTANCE # 搜索距离类型，默认为COSINE_DISTANCE，如果向量已归一化长度为1，可使用EUCLIDEAN_DISTANCE或NEGATIVE_INNER_PRODUCT以获得最佳性能
        # 嵌入维度，如果未显式指定，PgVectorStore将从提供的EmbeddingModel中获取维度，在创建表时设置嵌入列的维度，若更改维度则需重新创建vector_store表
        # 同时注意嵌入模型支持的最大维度
        dimensions: 1024
        remove-existing-vector-store-table: false # 是否在启动时删除现有的vector_store表
        initialize-schema: false # 是否初始化所需的模式
        schema-name: public # 向量存储模式名称
        table-name: vector_store # 向量存储表名称
        schema-validation: false # 启用模式和表名验证，确保它们是有效且存在的对象
        batching-strategy: TOKEN_COUNT # 计算嵌入时批处理文档的策略，可选值为TOKEN_COUNT或FIXED_SIZE
        max-document-batch-size: 10000 # 单个批次中处理的最大文档数量

logging:
  level:
    org:
      springframework:
        ai:
          chat:
            client:
              advisor: DEBUG
