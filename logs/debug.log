2024-12-22 13:20:52.715 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:22:26.940 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:22:44.588 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:23:15.486 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:23:58.178 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2b854bf3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4dfca075], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:24:06.006 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 52, totalTokens: 308 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@177eff23 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {"location": "San Francisco", "unit": null},
    "Tokyo": {"location": "Tokyo", "unit": null},
    "Paris": {"location": "Paris", "unit": null}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:25:22.476 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:25:22.746 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 2, totalTokens: 258 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@73e12c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:25:24.355 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:25:28.008 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 77, totalTokens: 333 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7c3a20a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"type": "function", "function": {"name":"currentWeather","description":"Get the weather in location","parameters":{"type":"object","required":["location","unit"],"properties":{"location":{"type":"string","description":"The city and state e.g. San Francisco, CA"},"unit":{"type":"string","description":"Temperature unit","enum":["C","F"]}}}}}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:25:47.905 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:25:50.627 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 55, totalTokens: 311 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4b989bf1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco", "unit": "F"},
  "Tokyo": {"location": "Tokyo", "unit": "C"},
  "Paris": {"location": "Paris", "unit": "F"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:26:49.322 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@624cb1b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c8b438f], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:26:51.992 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 55, totalTokens: 311 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1c51254f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco", "unit": "F"},
  "Tokyo": {"location": "Tokyo", "unit": "C"},
  "Paris": {"location": "Paris", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:26:55.771 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c365b27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52f1bed1], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:26:58.749 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 62, totalTokens: 318 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7b5bfbb6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "temperature": null,
    "condition": null
  },
  "Tokyo": {
    "temperature": null,
    "condition": null
  },
  "Paris": {
    "temperature": null,
    "condition": null
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:27:02.406 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ddf7a94, userText=hat's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1adf1b8c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd75917, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6f49f69f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49e42a38, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2da89d61, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@316efc72], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:27:05.053 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 256, generationTokens: 55, totalTokens: 311 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@32d39630 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco", "unit": "F"},
  "Tokyo": {"location": "Tokyo", "unit": "C"},
  "Paris": {"location": "Paris", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:51:14.616 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:51:20.773 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7ee41db3, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54941ea5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@788328d9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@28cb2df0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@761cb4df, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@289ed8f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63add8e7], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:51:25.707 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3c465633 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:51:35.513 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7ee41db3, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54941ea5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@788328d9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@28cb2df0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@761cb4df, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@431f5887, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4dd8ae94], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:51:35.772 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@ce5a4af }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:51:39.407 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7ee41db3, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54941ea5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@788328d9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@28cb2df0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@761cb4df, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@37951821, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3952e0a3], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:51:39.647 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@786fea98 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:51:40.621 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7ee41db3, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54941ea5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@788328d9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@28cb2df0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@761cb4df, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2dc838d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@c1b7da6], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:51:40.830 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4d26779d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:51:41.552 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7ee41db3, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54941ea5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@788328d9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@28cb2df0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@761cb4df, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1441fad2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1a86162a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 13:51:41.741 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6aaa83a4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 13:52:45.339 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 13:52:49.323 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@348270af, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionInfo], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3659a764, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63c81597, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a4ff91b, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7d6fedf5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f617bb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@25b1de5f], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:00:48.118 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:00:51.632 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5e2348ef, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6fd121e4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@e5d6260, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@480a87f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@40a0fc30, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@26982bc1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@43331310], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:00:53.856 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@e9f27e5 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:00:56.593 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5e2348ef, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6fd121e4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@e5d6260, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@480a87f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@40a0fc30, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2dc838d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@c1b7da6], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:00:56.831 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4d26779d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:02:57.090 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:03:00.489 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6a2e17ee, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@db499fb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50c24f27, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a6f719a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@50e48e5e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@79b6bef8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3bcf7d9e], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:07:55.670 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:08:05.417 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5f661abc, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@bf5d3151], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@91e0628, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6280c244, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@27078aaf, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@485bc709, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@318db76c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@55fbc1fb], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:08:07.681 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@66eebec4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:09:00.801 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5f661abc, userText=广州的天气如何？, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@bf5d3151], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@91e0628, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6280c244, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@27078aaf, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@485bc709, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@509dc6c9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4df098a8], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:09:01.052 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 224, generationTokens: 2, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6ac6d2e2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:14:57.553 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:15:01.711 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71164e2, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f9cfef2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@223cfbc9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@43b82630, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f027cd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72170ad, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@42062133], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:15:05.503 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 18, totalTokens: 258 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2774b271 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:15:09.417 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71164e2, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f9cfef2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@223cfbc9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@43b82630, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f027cd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1feb732e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@112c9ea3], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:15:12.133 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 52, totalTokens: 292 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@50119498 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {"location": "San Francisco", "unit": null},
    "Tokyo": {"location": "Tokyo", "unit": null},
    "Paris": {"location": "Paris", "unit": null}
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:15:17.733 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71164e2, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f9cfef2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@223cfbc9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@43b82630, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f027cd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a0bf552, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14cc0863], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:15:18.749 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 18, totalTokens: 258 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@55f10258 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:15:56.559 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:15:59.809 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5f9dcde, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7ffb4c52, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc74c53, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@487c6cce, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@3a84633, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@261403c8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@394768d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:01.254 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 24, totalTokens: 264 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@43015b1d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "units": null
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:16:38.571 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:16:44.990 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@fdb086c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@14223b1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@133ad919, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1fa40386, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@48ebe076, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4d14c0a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@8a32a0f], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:46.168 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 18, totalTokens: 258 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6a0e7e6c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:16:47.244 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@fdb086c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@14223b1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@133ad919, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1fa40386, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@48ebe076, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e60639c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50a79620], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:47.923 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 11, totalTokens: 251 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@119a9c1b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location":"San Francisco","unit":"F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:16:49.981 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@fdb086c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@14223b1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@133ad919, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1fa40386, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@48ebe076, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5bfe58c0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5539bdcf], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:51.306 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 25, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1404b7f4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:16:53.071 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@fdb086c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@14223b1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@133ad919, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1fa40386, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@48ebe076, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@303e123f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3ef9fa48], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:53.982 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 16, totalTokens: 256 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7fc4f073 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit1": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:16:56.843 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@fdb086c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@14223b1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@133ad919, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1fa40386, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@48ebe076, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@21fb6de1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2f3c87ae], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:16:58.129 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 24, totalTokens: 264 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5f258515 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": null
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:17:22.518 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:17:25.281 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32d7167, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36ca84a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@16db57fe, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@40614beb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@282fbcc9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4aa2d2e8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@68a18e5], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:17:26.462 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 18, totalTokens: 258 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7334c67c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:17:32.400 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32d7167, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36ca84a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@16db57fe, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@40614beb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@282fbcc9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@ada15c3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@41deae8], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:17:32.642 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 2, totalTokens: 242 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4520e0d3 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:17:33.591 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32d7167, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36ca84a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@16db57fe, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@40614beb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@282fbcc9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2948eab0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@278f11e9], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:17:34.885 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 240, generationTokens: 25, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@66b21bd2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 14:24:05.875 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:24:21.184 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@61f187e9, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather, CurrentWeather2, weatherFunctionInfo], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@349ee392, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6729d22f, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@38f2084, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6e2c31d3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2dedddf7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@47cdacf], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:24:22.486 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@61f187e9, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather, CurrentWeather2, weatherFunctionInfo], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@349ee392, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6729d22f, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@38f2084, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6e2c31d3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@c59e3f1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@29e0c0a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:24:50.064 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:24:54.719 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2971c84, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=你叫小明。
请你对我提供的信息进行专业且深入的分析，无论是文本内容、数据还是概念等方面。
用清晰、准确、有条理的语言进行回应，给出全面的解释、合理的建议或精准的判断。
帮助我更好地理解相关事物并做出明智的决策或获得更深入的认知。

回复格式如下
{desc:documents}
, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather, weatherFunctionInfo], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6b100e07, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2cbb73e6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@9824e46, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@334b00ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@58c04096, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2f932c2b], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:34:57.127 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:35:07.204 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@145faafa, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[UserMessage{content='你是一个有用的人工智能助手', properties={messageType=USER}, messageType=USER}], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2b161da6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3c10bee8, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@92953b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6048201d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7b28fa9f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@42f6fcec], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:38:29.170 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 14:38:33.750 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@121ae5ee, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[UserMessage{content='你是一个有用的人工智能助手', properties={messageType=USER}, messageType=USER}], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5f0c5451, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@74675669, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@776d7324, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@321dddb2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@f0ea97c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@419472ea], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 14:38:38.553 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 180, generationTokens: 2, totalTokens: 182 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@433d28a8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:03:35.998 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:03:45.053 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:04:02.303 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2473ed0d, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@9bc11b53, media=[], functionNames=[], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@65b02c81, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@535ed4d2, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@d999db0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@36b9128b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5289f4f9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7754423e], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:04:07.311 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 152, generationTokens: 2, totalTokens: 154 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@62fc0c7f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:19:06.014 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:19:20.248 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@23fb7d12, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@b6dd5d46], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5df67b95, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@35fbaf6e, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5c4315c5, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@24a8f0b2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4a6c0d61, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@22044b9d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:19:24.480 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 152, generationTokens: 2, totalTokens: 154 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@258eaf4e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:19:35.356 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@23fb7d12, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@b6dd5d46], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5df67b95, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@35fbaf6e, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5c4315c5, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@24a8f0b2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@70cb879e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c5b765e], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:19:35.618 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 152, generationTokens: 2, totalTokens: 154 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@70bae463 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:20:07.262 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:21:05.338 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:24:08.419 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2a80556f, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@c3228fb4], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1330bd23, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@69bad201, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2fa6bce3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7a5af55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11eac327, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2eff31c1], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:24:08.852 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 152, generationTokens: 2, totalTokens: 154 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6b0b2d2f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:26:02.122 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:26:06.565 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@29c242d4, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@16ba1a1d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2fc2ff0f, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7884f3bf, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@43ebca99, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5474a0b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3d45f72b], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:26:07.631 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 152, generationTokens: 2, totalTokens: 154 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@272d898e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:29:12.136 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:29:37.183 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:29:43.071 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bda1d5, userText=广州的天气如何？, systemText={prompt}, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1cef2ac1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@15d7a163, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6adcee0d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4643598a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@239fcaa1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@bebab08], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:29:44.042 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@612d2b3e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:30:42.593 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:30:44.926 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32298b89, userText=广州的天气如何？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72656143, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@66a94ac0, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@435ed1a4, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@3d557f85, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@64e37e15, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4830c703], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:30:46.135 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 150, generationTokens: 2, totalTokens: 152 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7f5b9875 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:30:47.166 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32298b89, userText=广州的天气如何？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72656143, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@66a94ac0, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@435ed1a4, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@3d557f85, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@24b8c89f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2a7f3278], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:30:47.413 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 150, generationTokens: 2, totalTokens: 152 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6b423843 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:30:49.291 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@32298b89, userText=广州的天气如何？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72656143, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@66a94ac0, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@435ed1a4, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@3d557f85, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3b788ce3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@35bf75fc], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:30:49.514 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 150, generationTokens: 2, totalTokens: 152 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74827fc7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:31:04.791 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:31:07.143 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f81b897, userText=广州的天气如何？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@394b95a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3886fd5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7aba8c5d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@585dd69d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3d5eaea3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7d68881a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:31:07.537 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 150, generationTokens: 2, totalTokens: 152 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@22e24c53 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:31:13.310 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f81b897, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@394b95a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3886fd5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7aba8c5d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@585dd69d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f240099, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@21e3fb0d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:31:13.778 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@60def136 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:31:20.531 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f81b897, userText=你是谁, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@394b95a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3886fd5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7aba8c5d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@585dd69d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@24b8c89f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2a7f3278], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:32:12.289 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:32:15.681 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@79dabe3b, userText=你是谁, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@608d8b0b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@72c0a775, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56ab869a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7aacd112, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@76f5c89f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@179323b], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:32:17.536 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 147, generationTokens: 33, totalTokens: 180 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@41b19201 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={ "message": "我是你的知识助手，我可以回答问题、提供信息和帮助你使用不同的工具。请告诉我你可以如何帮助你。" }, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:32:27.034 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@79dabe3b, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@608d8b0b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@72c0a775, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56ab869a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7aacd112, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3800d4a7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@36c72dd7], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:32:27.547 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@77fa27ec }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:32:36.342 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@79dabe3b, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@608d8b0b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@72c0a775, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56ab869a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7aacd112, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5b216c56, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@55e68942], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:32:36.574 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@14db8379 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:33:13.322 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:33:16.049 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@63c80f8e, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[UserMessage{content='广州的天气？', properties={messageType=USER}, messageType=USER}], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3a31a37f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7813a59e, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@499b01f6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6a8cc334, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5d91af41, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@384bde38], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:33:17.351 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 174, generationTokens: 2, totalTokens: 176 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@25ae9181 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:33:19.898 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@63c80f8e, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[UserMessage{content='广州的天气？', properties={messageType=USER}, messageType=USER}], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3a31a37f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7813a59e, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@499b01f6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6a8cc334, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1cd5e53e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@121208d4], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:33:20.135 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 174, generationTokens: 2, totalTokens: 176 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@532f02ef }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:33:26.572 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@63c80f8e, userText=你是谁, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[UserMessage{content='你是谁', properties={messageType=USER}, messageType=USER}], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3a31a37f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7813a59e, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@499b01f6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6a8cc334, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3800d4a7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@36c72dd7], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:35:15.524 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:35:21.076 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@13165aff, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7dec9f1a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@67c07f31, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@fc51d2e, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e257f8b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3728211a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@53f5e939], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:35:22.216 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3ce53955 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:35:23.608 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@13165aff, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7dec9f1a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@67c07f31, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@fc51d2e, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e257f8b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@21fb6de1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2f3c87ae], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:35:23.833 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6e018d95 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:39:42.792 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:39:59.884 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:40:11.851 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@62c2e5a8, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@bf2da8d0], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@704e1d0d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@ab26b61, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@9b28735, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7ca8dc0e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7c8e00e3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@657e9570], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:40:12.813 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@240928cb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:40:27.239 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@62c2e5a8, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@bf2da8d0], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@704e1d0d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@ab26b61, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@9b28735, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7ca8dc0e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36c72dd7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@32f8bfd7], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:40:27.478 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 149, generationTokens: 2, totalTokens: 151 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@49617058 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:42:39.814 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:42:48.877 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5fa4c171, userText=广州的天气？, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@78d8f51a], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c6b9a1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b6bf9f6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@12bd02a3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2df245cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7aaeea65, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4ebe188f], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:42:49.918 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 145, generationTokens: 2, totalTokens: 147 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@aeb0e14 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:43:13.931 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5fa4c171, userText=weather information for guangzou, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@702c4a85], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c6b9a1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b6bf9f6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@12bd02a3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2df245cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@144c1759, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7b717e96], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:43:15.562 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 196, generationTokens: 2, totalTokens: 198 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@317dc44 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:43:54.833 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5fa4c171, userText=weather information for guangzou, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@28fd74c7], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c6b9a1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b6bf9f6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@12bd02a3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2df245cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@705c9e27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6501d25a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:43:55.091 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 148, generationTokens: 2, totalTokens: 150 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4bd289de }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:43:56.534 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5fa4c171, userText=weather information for guangzou, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@a8c3600], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c6b9a1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b6bf9f6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@12bd02a3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2df245cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7d5605ba, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1311452d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:43:56.765 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 148, generationTokens: 2, totalTokens: 150 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@31149922 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:44:07.823 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5fa4c171, userText=guangzou weather information, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@2e21b14b], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c6b9a1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b6bf9f6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@12bd02a3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2df245cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2abc4f6b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6101b39], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:44:08.370 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 147, generationTokens: 2, totalTokens: 149 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@53c301a9 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:45:01.540 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:45:44.678 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:46:55.210 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:47:09.936 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:47:15.601 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=guangzou weather information, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@383a2475], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3a263cde, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2384765], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:47:16.049 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 147, generationTokens: 2, totalTokens: 149 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2237514b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:13.365 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@250f1f9c], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4ee7d1cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@41575529], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:14.242 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 11, totalTokens: 166 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2141463a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "city": "San Francisco"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:17.958 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@7efe2b80], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@c3d63e1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@12050289], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:18.182 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2029dc2e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:19.299 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@736641cf], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3269fdb2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@508860dd], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:19.551 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@559c13ed }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:20.356 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@7882fe14], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@64dffdd2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37ac6297], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:20.545 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@330acfa8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:21.402 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@17635f23], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@24eac582, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6d76c854], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:22.021 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 11, totalTokens: 166 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@580bf3c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "city": "San Francisco"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:23.111 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@71e8b7ae], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@47b71bb3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@a7d5b9], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:24.080 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 18, totalTokens: 173 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@75a62aff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:25.743 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@73c5e3], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@25b292b9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@436c2f41], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:26.401 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 11, totalTokens: 166 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@52bff47a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "city": "San Francisco"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:27.272 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3f5106d8], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7713b456, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@44f34e01], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:28.200 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 18, totalTokens: 173 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3b1fdd20 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:29.496 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@408652b1], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2e247b28, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5a0b5357], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:29.728 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1173f45c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:31.162 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1a532cd2], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61ace1cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@562ffedd], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:31.392 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@25324b37 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:48:32.392 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d285846, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@276e31eb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@75e1c35f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2733e2b5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2856747d, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@41a6e48e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f9d7ec6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5f6da803], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:48:32.596 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 155, generationTokens: 2, totalTokens: 157 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@63d5310a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:51:58.411 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:52:02.363 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@d94b45, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@242d4b22, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@728cbcb3], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@247a9e23, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1b81d132, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@51482264, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46b675da, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36cd70a9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@23502f03], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:52:35.462 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@d94b45, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@242d4b22, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@74f47c36], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@247a9e23, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1b81d132, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@51482264, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46b675da, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@70cb879e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c5b765e], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:52:36.486 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@d94b45, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@242d4b22, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@72c19618], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@247a9e23, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1b81d132, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@51482264, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46b675da, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@129c1bcb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@69685a65], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:53:34.214 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:53:37.301 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3f03859, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@6099d8ae, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3157427e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4bafece1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5fc50b77, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5df5c226, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@563a3f54, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62c60996, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@152f380a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:53:49.885 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:53:56.153 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3c7524fb, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@6a602da1, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@57dae9af], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7bb9fb7b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2729a3c2, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@326e1920, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@32790953, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@62f4e44, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6cf2caf0], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:54:39.575 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:54:44.263 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@266a1613, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@f6b1c6f9, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@10210926], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@67c978e0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6fea6cb4, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@19c625d4, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1b677f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2d94015d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@11a74797], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:55:38.530 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:55:43.342 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@70460d96, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@f6b1c6f9, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@240e9003, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@adf49ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@2e424ad0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@6ea8c833, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3ef6c36d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4e975c60], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:56:12.469 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:56:16.793 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@255f057b, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@f6b1c6f9, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33753cac, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@632fdb34, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6ed659dc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@33fffda0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2975372f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@341ebf4e], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:56:54.557 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:56:58.044 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3d1d83ff, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6a63d137, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b22b24, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@17ecffc6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46bf84bf, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@32210f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@25dde95d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:56:59.797 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@61c9a8d9 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:57:15.602 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3d1d83ff, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6a63d137, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b22b24, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@17ecffc6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46bf84bf, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2fa6cb13, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@21613097], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:57:16.595 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@605c3aac }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:57:23.411 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3d1d83ff, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6a63d137, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b22b24, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@17ecffc6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@46bf84bf, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e3da76d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50fa42da], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 15:57:24.401 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11c748e1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 15:59:48.596 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 15:59:59.766 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@668dde6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7e6addc0], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:00.899 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 2, totalTokens: 161 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@9795a0e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:00:02.102 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388a32ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@364dcbaf], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:02.343 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 2, totalTokens: 161 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7770c194 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:00:03.333 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:04.219 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:00:10.580 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:11.563 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:00:12.452 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:13.389 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74ec34db }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:00:14.297 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@34df7cef, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[currentWeather], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4622ea2b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@feef291, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@18bd297a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@57ca0686, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:00:15.232 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 159, generationTokens: 18, totalTokens: 177 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@57d9f50a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:07:19.569 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:07:23.984 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@67b2b38a, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@38864abb, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48f57c4c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@75fe7a1c, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@3becbe36, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49b06422, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2a447644, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2cecc78a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:07:43.652 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:07:48.990 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7b8c5e6, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@69bdcfb4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5a54d715, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@51d7b4f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@44cb09ff, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@438cbebd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3f1c25a6], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:07:53.394 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 25, totalTokens: 211 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@70f8d1f8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:08:08.286 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7b8c5e6, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@69bdcfb4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5a54d715, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@51d7b4f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@44cb09ff, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:08:09.115 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 14, totalTokens: 200 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7c3a20a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:08:48.643 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:08:54.486 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@36027675, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@432d286d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@768ede7b, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@333a58e6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@162e212a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3cea0dc2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3c976122], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:08:55.475 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 13, totalTokens: 199 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@252d0225 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1":"San Francisco","unit1":"C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:09:29.985 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:09:32.300 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@601c0086, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@fdbd4c7d, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f554a07, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@61206712, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@52a31618, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52bb34fa, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17fb49d8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7581a4c2], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:09:33.352 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 15, totalTokens: 201 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3be16935 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "C"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:10:08.382 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:10:12.826 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@536d43a2, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@775e1dd2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@39a5fb34, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@3ba707ce, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2ee334b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5591e49, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1333298d], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:10:14.322 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 25, totalTokens: 211 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@286ddc6c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:10:18.034 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@536d43a2, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答我的问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@775e1dd2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@39a5fb34, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@3ba707ce, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2ee334b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e3da76d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50fa42da], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:10:19.342 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 186, generationTokens: 25, totalTokens: 211 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11c748e1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:15:17.482 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:15:26.040 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4466fc51, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a96065d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@768fef8d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@26f6abd1, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@55014f2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7f8f1f39, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@76f574c2], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:15:29.100 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6a583d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:15:34.382 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4466fc51, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a96065d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@768fef8d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@26f6abd1, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@55014f2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:15:35.372 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:15:36.299 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4466fc51, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a96065d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@768fef8d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@26f6abd1, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@55014f2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:15:37.225 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:15:58.175 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:16:04.797 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@14988783, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@35a0e7fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65b9b753, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@76f40927, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@26803ce5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@142db0ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3c868e37], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:16:11.556 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 431, generationTokens: 2, totalTokens: 433 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@114d8b62 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:16:33.733 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@14988783, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@35a0e7fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65b9b753, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@76f40927, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@26803ce5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388a32ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@364dcbaf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:16:34.738 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@66522fe4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:16:39.755 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@14988783, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@35a0e7fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65b9b753, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@76f40927, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@26803ce5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:16:40.749 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:16:42.022 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@14988783, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@35a0e7fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65b9b753, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@76f40927, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@26803ce5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:16:44.965 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@cbd7e25 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:16:56.179 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@14988783, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@35a0e7fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65b9b753, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@76f40927, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@26803ce5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:16:57.224 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4a05a77d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:06.716 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:17:11.909 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@493e778e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@36c5ab41], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:13.071 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3b708026 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:14.110 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388a32ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@364dcbaf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:15.090 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7770c194 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:15.921 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:16.855 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:17.633 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:18.570 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:19.276 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:22.119 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74ec34db }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:23.808 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:24.806 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@57d9f50a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:25.644 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:26.582 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4b989bf1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:27.429 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@624cb1b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c8b438f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:29.301 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 38, totalTokens: 242 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1268c31 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"San Francisco": {"location": "San Francisco, CA"}, "Tokyo": {"location": "Tokyo, JP"}, "Paris": {"location": "Paris, FR"}}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:17:30.256 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@41bcf09f, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0abd79, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37c909a9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@644ac7c6, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@42d4fbd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c365b27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52f1bed1], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:17:36.349 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 431, generationTokens: 2, totalTokens: 433 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@743aa510 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:32.592 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:18:35.983 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6235e925, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71c22966], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:37.845 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@24b0398d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:38.922 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5757fffa, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@59900b60], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:41.200 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 46, totalTokens: 247 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@18ad015b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "function_name": "weatherFunctionWithContext",
  "parameters": {"location": "%s, JP", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:47.759 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@38b64331, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3671aa57], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:49.172 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 28, totalTokens: 229 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@774ca06c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "units": ["C", "F"]
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:50.860 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e3da76d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50fa42da], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:51.833 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11c748e1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:53.377 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2fa6cb13, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@21613097], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:54.356 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@51f6f9cf }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:55.145 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@10841fcc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e43f3ac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:55.915 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 14, totalTokens: 215 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@197ae844 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:56.823 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4ab42925, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4473ce03], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:57.572 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 14, totalTokens: 215 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@54ec438 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location": "San Francisco", "unit": "F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:18:58.590 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@e6fd39a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@a82c27], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:18:59.570 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3c2eb9ff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:00.422 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7f11c01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@936f28f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:01.355 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@480bf8b4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:02.165 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@91ceaee, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@552c9dec], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:03.415 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 25, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@712df7cf }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:04.240 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4da2b9cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@70f6d441], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:05.177 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@39d0fec4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:06.036 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@70ed959b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@297f5bed], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:08.902 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 61, totalTokens: 262 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7882fe14 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:10.107 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7de9ca7f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4671f487], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:11.087 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@17635f23 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:11.979 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@22f2837b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@209cf96d], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:12.914 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@71e8b7ae }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:13.728 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1fb162a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@73c5e3], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:14.662 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1d44a405 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:15.481 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@47f4356b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@902dd19], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:16.918 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 29, totalTokens: 230 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1e0a7e4b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "callback": "./get_weather_for_locations.js"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:17.820 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6ed838b5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3401e0bb], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:18.770 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@65613b77 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:19.491 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2d72b46b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@729a869], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:20.432 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6f6c3bdb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:21.113 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4715f4a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7909d447], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:22.044 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@282407fb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:22.764 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f08389e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2efa156e], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:23.571 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 15, totalTokens: 216 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@408f62df }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:24.324 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61644ceb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2776d85a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:25.258 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74beaad }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:26.148 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@64dffdd2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@37ac6297], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:29.277 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 67, totalTokens: 268 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7ccce22f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "san_francisco_weather": {"location": "San Francisco, CA", "unit": "F"},
    "tokyo_weather": {"location": "Tokyo, JP", "unit": "C"},
    "paris_weather": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:48.335 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@24eac582, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6d76c854], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:49.345 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@132da4f1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:50.689 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@47b71bb3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@a7d5b9], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:51.669 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@75a62aff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:19:52.440 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4e89be2d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6d2cf880, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19e150bd, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6bac57c9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@68d7e447, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@76265214, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e4d0c15], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:19:53.407 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1d0bcd6e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:20.826 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:20:26.310 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@d2241bb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@c91b403], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:28.082 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@47e3f4bf }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:29.217 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388a32ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@364dcbaf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:30.206 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7770c194 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:31.161 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:33.996 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "C"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:36.149 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:37.133 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:38.056 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:38.989 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74ec34db }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:39.845 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:42.720 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@57d9f50a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "C"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:43.649 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:46.544 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4b989bf1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "C"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:47.575 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@624cb1b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c8b438f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:50.537 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1268c31 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:52.702 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c365b27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52f1bed1], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:55.612 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@13ccb4ea }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
    "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
    "Paris": {"location": "Paris, FR", "unit": "C"}
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:20:56.443 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5eeef503, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63c852aa], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:20:57.380 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@28ee3c52 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:02.340 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7a28690, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@67ec57e8], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:05.286 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@43f1ace0 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "F"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:06.425 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1e0581f6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46cd312a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:07.382 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@175f3edb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:08.445 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6a8dc296, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f0a6144], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:09.377 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2e21b14b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:10.314 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4fece9f8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@cbd7e25], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:11.255 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5d6519d8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:11.995 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7fdb8d61, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@25cc0a8b], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:12.940 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6292d8d9 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:13.730 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@f77e258, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@171e3719], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:16.625 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@66fbe59b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "C"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:17.906 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c94c67b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7a9937e2], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:20.836 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 61, totalTokens: 265 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2bb764be }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA", "unit": "C"},
  "Tokyo": {"location": "Tokyo, JP", "unit": "C"},
  "Paris": {"location": "Paris, FR", "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:21.945 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2fe73c4f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4b2517bf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:22.909 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 204, generationTokens: 18, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@206974e7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:21:23.985 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5b49e09e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3116908f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@250486ca, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1cec64d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@8b52aca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7d4d3ad7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@22950499], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:21:30.048 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 431, generationTokens: 2, totalTokens: 433 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5fb53e7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:25:58.823 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:26:01.981 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1b2ccd5f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5cd71897], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:03.481 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@52c62e3b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:18.559 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:20.692 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 43, totalTokens: 251 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA"},
  "Tokyo": {"location": "Tokyo, JP"},
  "Paris": {"location": "Paris, FR"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:21.637 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:22.581 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@45e3f5c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:23.519 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:24.454 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7c3a20a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:25.422 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:26.355 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7a9937e2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:27.376 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@624cb1b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c8b438f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:28.343 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@31ae5e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:29.082 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3a52fbe8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63530261], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:29.850 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 14, totalTokens: 222 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@78a2f4f2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location": "San Francisco", "unit": "F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:30.726 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3e1331e3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@577ba3b0], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:31.671 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@27b1bb9a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:32.461 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@528e47d8, userText=What's the weather 123 like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@61e06876, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31aed247, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@59fd85bc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@796da9dc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@580e8485, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@73124c2a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:26:33.399 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@64ef8bee }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:26:54.475 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:27:08.112 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@45405233, userText=What's the weather like in Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@e9a09b8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@da79e22, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@70a94a27, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@37bf4fcb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6936574d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@585182c7], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:27:09.292 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 14, totalTokens: 215 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@46611317 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["Tokyo", "Paris"]
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:27:10.496 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@45405233, userText=What's the weather like in Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@e9a09b8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@da79e22, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@70a94a27, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@37bf4fcb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:27:11.251 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 14, totalTokens: 215 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["Tokyo", "Paris"]
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:27:12.027 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@45405233, userText=What's the weather like in Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@e9a09b8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@da79e22, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@70a94a27, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@37bf4fcb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:27:14.017 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 291, generationTokens: 2, totalTokens: 293 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7bde5915 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:27:50.866 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:29:00.574 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:29:05.419 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2af040, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5ae4d467], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:06.912 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@ea8c7e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:08.163 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e3da76d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@50fa42da], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:09.112 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 17, totalTokens: 225 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11c748e1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location123": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:09.959 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2fa6cb13, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@21613097], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:10.882 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@605c3aac }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:11.911 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@10841fcc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e43f3ac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:14.013 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 43, totalTokens: 251 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5f7ef997 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA"},
  "Tokyo": {"location": "Tokyo, JP"},
  "Paris": {"location": "Paris, FR"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:14.947 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4ab42925, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4473ce03], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:15.888 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3401e0bb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:16.758 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@e6fd39a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@a82c27], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:17.669 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@62f9ac4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:18.590 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7f11c01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@936f28f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:19.554 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@480bf8b4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:20.318 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@54659658, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5aa272a4], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:22.394 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 43, totalTokens: 251 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@52fe07f2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA"},
  "Tokyo": {"location": "Tokyo, JP"},
  "Paris": {"location": "Paris, FR"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:23.358 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@78ec0eff, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@762bef92], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:24.285 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3716e5a9 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:25.062 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6ddcc2c9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63af66d4], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:25.991 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7f1fe02b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:26.812 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@52b32ca4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@42b5fdbe], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:27.740 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2de2a1f1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:28.544 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@22f2837b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@209cf96d], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:29.469 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@71e8b7ae }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:30.193 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@79bb8be7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@51f6f9cf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:31.134 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@73c5e3 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:31.762 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6fb4f7cb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6e6ba702], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:33.613 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 38, totalTokens: 246 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3f5106d8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"San Francisco": {"location": "San Francisco, CA"}, "Tokyo": {"location": "Tokyo, JP"}, "Paris": {"location": "Paris, FR"}}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:34.862 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@167d4284, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65613b77], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:35.827 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7e35b8ff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:36.660 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@653aa5fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1f39ea25], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:37.577 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@44a400bf }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:38.399 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4715f4a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7909d447], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:39.325 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@282407fb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:40.097 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@125074e1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@74c86d8c], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:43.417 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 71, totalTokens: 279 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6469831b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "city": "San Francisco",
    "country": "United States"
  },
  "Tokyo": {
    "city": "Tokyo",
    "country": "Japan"
  },
  "Paris": {
    "city": "Paris",
    "country": "France"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:44.399 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f158e42, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@66bb34d], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:46.470 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 43, totalTokens: 251 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@57391ae6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA"},
  "Tokyo": {"location": "Tokyo, JP"},
  "Paris": {"location": "Paris, FR"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:47.560 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@745ebf8b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c5fee12], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:48.480 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 17, totalTokens: 225 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@617b729a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location123": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:49.528 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@66ff7ee5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@bca3789], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:50.647 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 22, totalTokens: 230 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6bbbbaf4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location123": {"locations": ["San Francisco", "Tokyo", "Paris"]}}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:29:54.681 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@47b71bb3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@a7d5b9], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:29:58.650 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 85, totalTokens: 293 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@75a62aff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {
        "city": "San Francisco",
        "country": null,
        "state": null
    },
    "Tokyo": {
        "city": "Tokyo",
        "country": null,
        "state": null
    },
    "Paris": {
        "city": "Paris",
        "country": null,
        "state": null
    }
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:00.169 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@25b292b9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@436c2f41], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:01.139 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@43db921 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:02.126 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7713b456, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@44f34e01], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:03.056 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3b1fdd20 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:04.062 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2b9d8acf, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6a83cc59], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:04.952 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 17, totalTokens: 225 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@47efc62b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location123": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:05.793 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@41c50e07, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f12b08], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:06.707 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@561de61 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:07.957 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@407c56ab, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7760190f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:08.937 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2c6adb76 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:10.165 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@59a27e44, userText=What's the location123 weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@33d449fc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f14a012, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5bbac54c, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@11a0c021, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@758f040b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@429ca33b], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:11.700 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 30, totalTokens: 238 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7ab2497f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location123": {"San_Francisco": "CA", "Tokyo": "JP", "Paris": "FR"}}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:40.168 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:30:42.365 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@414a98fd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@27eddca1], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:43.710 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 16, totalTokens: 224 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@48eb6425 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "F"}  
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:45.175 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:46.152 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:47.740 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:48.722 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@45e3f5c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:49.921 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:50.766 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 15, totalTokens: 223 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7c3a20a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:51.548 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:52.496 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7a9937e2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:53.289 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@624cb1b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6c8b438f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:54.223 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@31ae5e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:54.913 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c365b27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52f1bed1], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:55.712 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 15, totalTokens: 223 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@13ccb4ea }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:56.410 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@143f7d29, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1af881de], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:57.347 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@41d3f09f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:58.043 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@bfbab4c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@53c4443], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:30:58.983 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@44014e78 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:30:59.796 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5f94c8a3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@42387ded], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:00.735 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7dd8055c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:01.433 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6ea2c23, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7bf95ff6], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:02.370 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@28ad291d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:03.060 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4fece9f8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@cbd7e25], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:04.000 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5d6519d8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:04.662 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@73e12c4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@74ec34db], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:05.605 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@25cc0a8b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:06.285 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5829ecb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@368e016a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:07.210 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@67ec5d45 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:07.861 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@247f34d3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2bb764be], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:08.804 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@34248353 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:09.321 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2809e147, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2547f946], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:10.262 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 18, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3f70fce1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:10.949 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7d4d3ad7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@22950499], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:11.755 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 208, generationTokens: 15, totalTokens: 223 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@73e34ba5 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location1": "San Francisco", "unit": "F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:12.578 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4d8131a9, userText=use function, What's the location weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@11e3b55, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@34aa5d68, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@75b6b262, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31fed904, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7f66d5f4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@406c06bd], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:31:14.593 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 298, generationTokens: 2, totalTokens: 300 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6b8c590e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:31:59.258 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:32:02.158 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@8ec6cee, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@db150c1], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:03.985 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@b7dc4fe }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:05.459 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:06.437 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:07.249 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:08.193 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:09.028 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:09.969 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@45e3f5c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:10.698 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:11.634 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@368e016a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:12.376 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@71f01e87, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f4fc6e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b6cdc7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4850d668, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@39a5fdc3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:32:13.340 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@457caa42 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:32:56.464 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:33:43.904 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:34:10.248 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f5a91a9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f7d773c], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:11.507 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7982c7c1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:16.501 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388a32ce, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@364dcbaf], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:17.498 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7770c194 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:18.514 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1f4aa71, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@f33443f], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:19.503 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e0e4e04 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:20.231 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72b01c8a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7c77ecac], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:21.485 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 25, totalTokens: 226 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d4ae697 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:22.224 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@a1910cc, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4deffff], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:23.163 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74ec34db }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:23.931 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@48394f46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46fea831], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:24.877 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@57d9f50a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:25.562 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4627f36, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@aa591ca], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:26.893 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 27, totalTokens: 228 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4b989bf1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "locations": ["San Francisco", "Tokyo", "Paris"],
    "callback": "weatherFunctionWithContext"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:28.585 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@41ce8850, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@62e76f61], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:29.560 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1abe8f85 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:30.514 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5ea07c51, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7349d312], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:31.441 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@14950377 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:32.113 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@513ebff1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5501310e], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:33.040 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@53c371e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:33.713 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@ece33d9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3f15d862], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:35.792 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 43, totalTokens: 244 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7aafa26e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"location": "San Francisco, CA"},
  "Tokyo": {"location": "Tokyo, JP"},
  "Paris": {"location": "Paris, FR"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:34:37.979 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@360d319e, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=Find the weather conditions, forecasts, and temperatures for a location, like a city or state., chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[weatherFunctionWithContext], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4f86bfd1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3be37c92, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4a0685fb, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1558dce4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1e0581f6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@46cd312a], advisorParams={}, adviseContext={}, toolContext={sessionId=123}]
2024-12-22 16:34:38.982 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 201, generationTokens: 18, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@175f3edb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:46:57.550 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:48:25.418 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:49:25.668 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:49:48.294 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:51:23.305 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:51:59.148 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:52:04.255 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5c1f4ae6, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[MockWeatherService], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7db87884, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@76fa41d4, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6fd4eb7b, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@49bac41d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@77f8f9f6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5328f23c], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:52:12.445 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 63, totalTokens: 276 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@15371a5c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "lat_San_Francisco": 37.7749,
  "lon_San_Francisco": -122.4194,
  "location_San_Francisco": "San Francisco",
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:53:25.006 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:53:27.469 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@65df9adb, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[MockWeatherService], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2e4eace2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7378557a, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6d092b6a, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@74997d52, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2febe69f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e89b59d], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:53:35.785 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 155, totalTokens: 368 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@8aba0aa }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.7749,
    "lon": -122.4194,
    "location": "San Francisco, CA",
    "unit": "F"
  },
  "Tokyo": {
    "lat": 35.6895,
    "lon": 139.6917,
    "location": "Tokyo, JP",
    "unit": "C"
  },
  "Paris": {
    "lat": 48.8566,
    "lon": 2.3522,
    "location": "Paris, FR",
    "unit": "F"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:54:37.651 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:54:43.740 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@47c4e022, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@4286b97a], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3e09efa2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1953b0e9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@3114da60, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5131e990, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@203478eb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@246440fc], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:54:46.608 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 38, totalTokens: 250 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4cd8eafb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.756, "location": "San Francisco", "lon": -122.4298, "unit": "C"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:54:53.506 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@47c4e022, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@4286b97a], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3e09efa2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1953b0e9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@3114da60, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5131e990, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4deffff, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@e17bbc], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:54:58.559 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 106, totalTokens: 318 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@73e12c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.78, "location": "San Francisco", "lon": -122.41},
  "Tokyo": {"lat": 35.6895, "location": "Tokyo", "lon": 139.6917},
  "Paris": {"lat": 48.8566, "location": "Paris", "lon": 2.3522}
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:55:43.194 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 16:55:58.170 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@487a2937, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5c7a3038], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7415f34f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7fe41f6c, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@b8fd7e0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@12257437, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@49f162b7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@16311b9a], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:56:02.722 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 90, totalTokens: 302 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@44d28e24 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:56:40.966 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@487a2937, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5c7a3038], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7415f34f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7fe41f6c, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@b8fd7e0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@12257437, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@aa591ca, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@e9a1446], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:56:42.800 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 38, totalTokens: 250 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5c94c67b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.756, "location": "San Francisco", "lon": -122.4238, "unit": "C"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:56:45.176 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@487a2937, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5c7a3038], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7415f34f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7fe41f6c, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@b8fd7e0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@12257437, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4d99b6fb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@63221ec9], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:56:46.146 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 18, totalTokens: 230 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4979c669 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 16:56:47.358 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@487a2937, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5c7a3038], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7415f34f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7fe41f6c, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@b8fd7e0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@12257437, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@52f1bed1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@56ce3057], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 16:56:51.561 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 90, totalTokens: 302 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7d4d3ad7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:01:06.011 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:01:09.995 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3540fb70, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5a64ba6e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@70f5b884, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@318b1c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31b141ab, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4ef92a39, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@13958afa], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 17:01:20.972 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 29, generationTokens: 231, totalTokens: 260 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7951ce37 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "weather": [
    {
      "city": "San Francisco",
      "weather": "variable conditions, typically mild with occasional fog. Expect temperatures ranging from 10°C to 23°C (50°F to 73°F) in April."
    },
    {
      "city": "Tokyo",
      "weather": "temperate all year round with an average temperature of around 16°C (61°F). Rainfall is evenly distributed throughout the year, and it often drizzles or sprinkles. Expect temperatures ranging from 5°C to 28°C (41°F to 82°F) in April."
    },
    {
      "city": "Paris",
      "weather": "temperate all year round with an average temperature of around 10°C (50°F). Expect temperatures ranging from 3°C to 17°C (37°F to 62°F) in April. Rainfall is evenly distributed throughout the year, and it often drizzles or sprinkles."
    }
  ]
}

  							
  								
  , metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:01:21.031 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@3540fb70, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@90114103], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5a64ba6e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@70f5b884, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@318b1c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@31b141ab, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5537d6a0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@23fbf305], advisorParams={}, adviseContext={}, toolContext={}]
2024-12-22 17:01:25.984 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 86, totalTokens: 298 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3e307d4e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.78, "lon": -122.41},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:16:16.386 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:16:29.054 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@39ddfd56, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[MockWeatherService], functionCallbacks=[], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@36afe509, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3fa632d6, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@33ec085f, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@650d7439, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2cc3423c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@227de5f0], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:17:07.518 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:17:12.285 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@51727a93, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@688f6274], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eae6e1, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5025f859, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@684cedcc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2aa8b4b4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7c2392ee, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@33b5a03], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:17:22.143 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 105, totalTokens: 317 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@907bdc }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "latitude": 37.7749,
    "longitude": -122.4194
  },
  "Tokyo": {
    "latitude": 35.6895,
    "longitude": 139.6917
  },
  "Paris": {
    "latitude": 48.8566,
    "longitude": 2.3522
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:18:14.241 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:18:24.387 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@20720837, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@6ef4dcc8, org.springframework.ai.model.function.FunctionInvokingFunctionCallback@6ef4dcc8], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@b749455, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3f9add94, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1442d8dc, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@24c159d3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@bb8a722, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@62a7adbc], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:18:26.812 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 45, totalTokens: 257 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@41e68f0d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.756079, "location": "San Francisco, CA", "lon": -122.425868, "unit": "C"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:19:12.752 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:19:17.191 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@33d0ce0d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@7c689b18], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@39d66fd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fb20339, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@219a5f99, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@148f5d01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1e2d48e7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@41d93bd0], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:19:20.050 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 216, generationTokens: 41, totalTokens: 257 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7935350f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat1": 37.756, "location": "San Francisco, CA", "lon1": -122.428, "unit": "F"}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:19:23.652 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@33d0ce0d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@7c689b18], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@39d66fd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fb20339, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@219a5f99, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@148f5d01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f493bfd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b76a2cc], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:19:27.050 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 216, generationTokens: 71, totalTokens: 287 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@39a0ce9d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "location_weather_details": [
    {
      "city_name": "San Francisco",
      "weather_details": null
    },
    {
      "city_name": "Tokyo",
      "weather_details": null
    },
    {
      "city_name": "Paris",
      "weather_details": null
    }
  ]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:19:30.394 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@33d0ce0d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@7c689b18], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@39d66fd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fb20339, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@219a5f99, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@148f5d01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@32827aeb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@324bd535], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:19:31.410 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 216, generationTokens: 19, totalTokens: 235 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1738c1f6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "location1": "San Francisco",
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:19:33.469 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@33d0ce0d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@7c689b18], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@39d66fd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fb20339, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@219a5f99, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@148f5d01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@29ee010b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2dd180ee], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:19:34.760 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 216, generationTokens: 25, totalTokens: 241 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e68af }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:19:36.329 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@33d0ce0d, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@7c689b18], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@39d66fd8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fb20339, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@219a5f99, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@148f5d01, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@179a145f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@13a59274], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:19:41.861 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 216, generationTokens: 118, totalTokens: 334 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@58b29067 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat1": 37.75, "location": "San Francisco, CA", "lon1": -122.42},
  "Tokyo": {"lat1": 35.6895, "location": "Tokyo, Japan", "lon1": 139.6917},
  "Paris": {"lat1": 48.8566, "location": "Paris, France", "lon1": 2.3522}
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:11.444 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:22:13.762 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1519cc44, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@8cf8ead], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:14.954 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@384f802e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:16.234 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@29ee010b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2dd180ee], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:16.479 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e68af }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:34.953 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3688e12b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@340d40a7], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:35.183 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@43b61bfe }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:36.381 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4e2fd2c2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4a105fdf], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:36.630 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@eded8f8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:37.613 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1b4d998f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1f721e3e], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:37.848 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@646cbef1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:22:38.551 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1e18206c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1a27b777], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:22:38.743 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6815a345 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:23:28.992 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@717c3afb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7543a00c], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:23:29.461 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1100ed9f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:23:30.260 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ac97298, userText=What's the weather like in Shanghai?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@996a298f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1eab018e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31d583c1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4234f7b8, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@537800d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@64e5421a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@60daca5e], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:23:30.461 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 206, generationTokens: 2, totalTokens: 208 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11c73cab }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:23:42.229 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:23:44.732 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@74db7b82, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@6715cb7d], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7daa1c7, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@70498a94, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@726bc2ec, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5dc3b048, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@f45f6ae, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3364c0f8], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:23:49.321 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 90, totalTokens: 302 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@606c3a9a }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {"lat": 37.7749, "lon": -122.4194},
    "Tokyo": {"lat": 35.6895, "lon": 139.6917},
    "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:08.897 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:24:11.332 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@65ad68cc, userText=What's the weather like in San Francisco?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@404b722e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@60f6aa69, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e81e8bc, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1ced57a0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1208b7f9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4778f233, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@56ad2668], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:11.927 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 207, generationTokens: 2, totalTokens: 209 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@e57b76b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:13.659 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@65ad68cc, userText=What's the weather like in San Francisco?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@404b722e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@60f6aa69, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e81e8bc, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1ced57a0, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1208b7f9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f493bfd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b76a2cc], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:13.889 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 207, generationTokens: 2, totalTokens: 209 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@39a0ce9d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:28.313 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:24:30.442 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6d7d2d78, userText=What's the weather like in San Francisco, Tokyo?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@480ba964], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@500adc73, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5eef5004, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@55c871ac, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@51da9080, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5735278c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@737e221e], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:33.149 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 209, generationTokens: 47, totalTokens: 256 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@555eca45 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.7561402, "location": "San Francisco, CA", "lon": -122.4268968, "unit": "C"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:36.092 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6d7d2d78, userText=What's the weather like in San Francisco, Tokyo?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@480ba964], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@500adc73, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5eef5004, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@55c871ac, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@51da9080, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6f493bfd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@6b76a2cc], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:38.106 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 209, generationTokens: 41, totalTokens: 250 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@39a0ce9d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "lat": 37.75,
  "location": "San Francisco",
  "lon": -122.42,
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:39.786 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6d7d2d78, userText=What's the weather like in San Francisco, Tokyo?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@480ba964], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@500adc73, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5eef5004, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@55c871ac, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@51da9080, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@32827aeb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@324bd535], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:41.679 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 209, generationTokens: 39, totalTokens: 248 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1738c1f6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.756, "location": "San Francisco, CA", "lon": -122.424, "unit": "F"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:24:42.730 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6d7d2d78, userText=What's the weather like in San Francisco, Tokyo?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@480ba964], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@500adc73, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5eef5004, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@55c871ac, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@51da9080, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@29ee010b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2dd180ee], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:24:44.909 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 209, generationTokens: 45, totalTokens: 254 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4e68af }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat": 37.756149, "location": "San Francisco, CA", "lon": -122.426038, "unit": "F"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:29:21.260 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:29:25.836 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4abe41c4, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@52fcf03a], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4831a346, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@77abfaee, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4fa335be, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7aeb6150, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3f05d6d8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@17d1375c], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:29:28.759 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 161, generationTokens: 39, totalTokens: 200 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@636b6b94 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"location_weather_forecast":"Retrieve weather forecast for multiple locations is not supported by the current set of tools. However, I can fetch the current weather for one location at a time."}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:30:32.152 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:30:34.681 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@354587fe], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4e563d11, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@27bfae46], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:30:35.480 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@227352e5 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:30:58.117 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@312d9444], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5c80ad48, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@53fb873], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:30:59.594 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@f1e4759], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1de6f56e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4666ae2f], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:30:59.809 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@42e6afea }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:00.016 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@488bb33f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7365ba87, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@247fa1d7], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:01.546 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@2dc99d52], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7dcad27a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@47bcc4d3], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:01.737 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3a4f4821 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:02.070 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@15a4d088], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@278db849, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@20bd4fcb], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:02.265 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7d4dedf3 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:02.621 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@4eeed2de], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5fa7c908, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@616b5ba8], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:02.807 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@56211dde }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:03.013 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@48135773], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@202079a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@75ffa613], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:03.211 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@541bf94d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:03.543 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@4fb18314], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7c2a1b58, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1d960e96], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:03.737 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@45e9a0c5 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:04.054 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@227ed599], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a5a2c2d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7a64d0e0], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:04.244 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4443de8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:04.521 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3a046cbe], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@b4b4034, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@64867b6], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:04.708 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@17bb3a52 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:05.023 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@334ad0d5], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@16fd5bc4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@16d4defc], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:05.216 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5dc98125 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:05.495 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@2a97b7e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@25fd625f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7441849b], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:05.690 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4f5622f8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:06.004 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@7f63af9b], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4ef41f9b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31f5c0f0], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:06.199 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@30e48f68 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:06.523 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@5ae8971d, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@767d353f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3126090a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48942287, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@56da14f7, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@4f3903a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@32664d49, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4fe0c1c1], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:31:07.757 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:31:09.358 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:31:09.818 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 245, generationTokens: 2, totalTokens: 247 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@66b8f7d1 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:31:57.911 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:32:00.105 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@19c3ab3e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3e88d4d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5fc3840d], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:00.615 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@750224db }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:00.923 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1f116440], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5acf148e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31a2abf4], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:01.124 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@267efbeb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:01.915 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3f4ba2d2], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@53252bb9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@56b36809], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:02.105 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5c8f4b87 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:02.769 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@5ac23d49], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6e53c4c8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3f359f85], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:02.954 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@276f4672 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:03.588 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@501cfd7d], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1686936a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@67cc6554], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:03.784 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6a3e1674 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:04.021 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@6c104d9d], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3f96d604, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4c8c53e3], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:04.224 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@578299ec }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:04.437 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1d848356], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@436deae8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7e92cbe], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:04.638 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@482a6141 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:04.844 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@2d8fecce], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@467cff37, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@60564074], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:06.096 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:32:07.427 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 198, generationTokens: 21, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@37ca0ccd }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"status": "success", "message": "The living room lights have been turned on."}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:41.587 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@42f1530e], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5d850eff, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@76be4e6b], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:41.859 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2131b086 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:42.233 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@340a27dd], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@49efb9c0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2bb2f5b5], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:42.415 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@19ed274e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:42.737 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@184fbc92], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@609a3e7a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@35fbff50], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:42.927 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@716c4c09 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:43.209 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@69d551fe], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@15dfb715, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@544b161d], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:43.407 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@23d1351c }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:43.711 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1ad4c487], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@20037db2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@229322b8], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:32:43.922 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@40130866 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:32:44.191 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@15c8d78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@55ba43ac], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@17d62892, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f85c5e5, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1c222f18, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@183cedf9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@6db449d4, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3d2343fc], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:33:27.413 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:33:28.782 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 199, generationTokens: 18, totalTokens: 217 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@30921a3b }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={ "message" : "The living room lights have been turned on successfully." }, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:33:54.079 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:33:56.801 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@2dcf6178], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@f02d99f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5fac48e0], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:33:57.276 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@36983151 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:33:57.561 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3afa8f25], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2f6f839d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@277c03d7], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:33:58.772 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.functions.DeviceController - deviceId
2024-12-22 17:33:58.773 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.functions.DeviceController - state
2024-12-22 17:33:58.773 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:33:59.600 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 198, generationTokens: 8, totalTokens: 206 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@54a10748 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={ "_success": true } 
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:33:59.845 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1587180f], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1771d547, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@553be802], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:00.040 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4f65801 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:00.465 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@501cfd7d], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1686936a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@67cc6554], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:00.656 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6a3e1674 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:01.011 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@6c104d9d], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3f96d604, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4c8c53e3], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:01.204 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@578299ec }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:01.519 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1d848356], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@436deae8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7e92cbe], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:02.732 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - deviceId
2024-12-22 17:34:02.732 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - state
2024-12-22 17:34:02.732 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:34:04.205 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - deviceId
2024-12-22 17:34:04.206 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - state
2024-12-22 17:34:04.206 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:34:05.638 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 243, generationTokens: 24, totalTokens: 267 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@444ccdb7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "message": "The living room lights have been turned on.",
  "status": "SUCCESS"
}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:05.864 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@444f8466], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2eca9032, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@10117945], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:06.060 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1bf7ac6e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:37.954 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3e6b1851], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@76fe11b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@712df8c0], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:38.208 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@33b14e52 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:38.900 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3737e128], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@18b9ba48, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@48bca425], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:39.081 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1363a8aa }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:39.749 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@17d53f74], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@15b2b1db, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@65e264d6], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:39.938 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d72c01 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:40.546 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@5478cae5], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@30b8184d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5207d0f9], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:40.737 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5733835d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:41.255 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@7c5f0b96], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@40130866, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7bc6133b], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:41.444 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@11fd5ca }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:42.032 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@343fc500], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@78faa4a5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4f353045], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:42.219 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@17985e6e }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:42.597 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@316ce03], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1dc07395, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19d2cd55], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:42.778 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@49df51e2 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:43.251 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@55802374], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@192b144f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@55658b78], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:43.438 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@37ac5f8d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:43.929 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1dc9b094], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1640f061, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3d115e38], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:44.110 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@e4b2ee6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:50.329 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@77f516ea], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7a567c4b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3c758159], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:34:50.578 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@70dc233d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:34:51.050 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@2f7d41fa, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3274cbc7], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@27849d2a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1fc9e6f1, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@5a7e0663, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@c6c78f5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4dd7ebdb, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@47996b17], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:35:06.942 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.functions.DeviceController - deviceId
2024-12-22 17:35:06.943 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.functions.DeviceController - state
2024-12-22 17:35:06.943 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData
2024-12-22 17:35:08.369 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 198, generationTokens: 21, totalTokens: 219 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5505c5fb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"status": "success", "message": "The living room lights have been turned on."}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:36:14.698 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:36:17.078 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6b88a78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@39adbce0], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@454f6236, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52c8ddd9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7cd284fd, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@284c7d3b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@16ace4d6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@21ed5cf], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:36:17.600 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@18d340c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:36:18.494 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6b88a78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@1f116440], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@454f6236, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52c8ddd9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7cd284fd, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@284c7d3b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5acf148e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@31a2abf4], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:36:18.703 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 153, generationTokens: 2, totalTokens: 155 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@267efbeb }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:36:19.443 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@6b88a78a, userText=Turn on the living room lights, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.MethodInvokingFunctionCallback@3f4ba2d2], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@454f6236, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@52c8ddd9, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@7cd284fd, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@284c7d3b, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@53252bb9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@56b36809], advisorParams={}, adviseContext={}, toolContext={location=home}]
2024-12-22 17:36:36.806 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.functions.DeviceController - deviceId: living_room_lights
2024-12-22 17:36:36.806 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.functions.DeviceController - state: true
2024-12-22 17:36:36.807 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.functions.DeviceController - contextData: home
2024-12-22 17:36:38.104 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 199, generationTokens: 17, totalTokens: 216 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@40985143 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={ "message": "The living room lights have been turned on successfully." }, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:37:40.990 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:37:53.758 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@1e3a1196, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@727b6758], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@9d297f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71178bb7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6016beb9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e6ea58c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@331ed2bd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7e19bd5a], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:37:55.848 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 18, totalTokens: 230 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@20b976ff }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:37:56.738 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@1e3a1196, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@727b6758], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@9d297f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71178bb7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6016beb9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e6ea58c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@13908f9f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@17af0935], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:37:58.118 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 25, totalTokens: 237 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@74ce80fe }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": ["San Francisco", "Tokyo", "Paris"],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:38:02.869 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@1e3a1196, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@727b6758], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@9d297f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71178bb7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6016beb9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e6ea58c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@8fcf47f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7b04fedf], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:38:07.151 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 90, totalTokens: 302 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@63825731 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:38:08.200 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@1e3a1196, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@727b6758], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@9d297f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71178bb7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6016beb9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e6ea58c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@179a145f, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@13a59274], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:38:10.521 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 47, totalTokens: 259 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2044586d }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "lat": 37.7749,
  "location": "San Francisco, CA",
  "lon": -122.4194,
  "unit": "F"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:38:53.258 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@1e3a1196, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@727b6758], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@9d297f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@71178bb7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@6016beb9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@2e6ea58c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@4e2fd2c2, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4a105fdf], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:38:55.131 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 34, totalTokens: 246 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@7671ec91 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={"lat":"37.7749","location":"San Francisco, CA","lon":-122.4194,"unit":"F"}, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:43:30.806 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:46:25.158 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:46:28.423 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@3745508e, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@59b6fd8d], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:46:35.513 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 71, totalTokens: 283 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@21f9fb96 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "lat_San_Francisco": 37.7749,
  "location_San_Francisco": "San Francisco, CA",
  "lon_San_Francisco": -122.4194,
  "unit_San_Francisco": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:46:40.704 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@71c7f7e0, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@75f86d00], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:46:46.569 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 126, totalTokens: 338 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4fb65e32 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.7749,
    "lon": -122.4194,
    "unit": "C"
  },
  "Tokyo": {
    "lat": 35.6895,
    "lon": 139.6917,
    "unit": "C"
  },
  "Paris": {
    "lat": 48.8566,
    "lon": 2.3522,
    "unit": "C"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:46:47.651 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@416dcffd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@17c0a8c9], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:46:52.045 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 94, totalTokens: 306 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6a9e5ab0 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.784492, "lon": -122.407365},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8534, "lon": 2.3496}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:46:53.044 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7bbcbb63, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7f8330cc], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:46:58.145 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 110, totalTokens: 322 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1508ab0f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "location": "San Francisco", "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "location": "Tokyo", "lon": 139.6917},
  "Paris": {"lat": 48.8566, "location": "Paris", "lon": 2.3522}
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:46:59.230 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@ee73875, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@ad8ad71], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:47:04.994 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 126, totalTokens: 338 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@31a3c139 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {
        "lat": 37.7749,
        "lon": -122.4194,
        "unit": "C"
    },
    "Tokyo": {
        "lat": 35.6895,
        "lon": 139.6917,
        "unit": "C"
    },
    "Paris": {
        "lat": 48.8566,
        "lon": 2.3522,
        "unit": "C"
    }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:47:06.398 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@2a7043f3, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2e4fc265], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:47:10.604 [http-nio-9077-exec-7] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 90, totalTokens: 302 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3e193c50 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "lon": 139.6917},
  "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:47:11.610 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5e0b27b9, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@5a34a8a0], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:47:16.994 [http-nio-9077-exec-8] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 115, totalTokens: 327 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@2952bff7 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749295, "location": "San Francisco", "lon": -122.419416},
  "Tokyo": {"lat": 35.6895, "location": "Tokyo", "lon": 139.6917},
  "Paris": {"lat": 48.8566, "location": "Paris", "lon": 2.3522}
}

, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:47:18.337 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@5585a8c8, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@51ba36a0], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:47:21.172 [http-nio-9077-exec-9] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 59, totalTokens: 271 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@5ba423d8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "latSanFrancisco": 37.7749,
  "locationSanFrancisco": "San Francisco, CA",
  "lonSanFrancisco": -122.4194,
  "unitSanFrancisco": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:47:22.577 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@4ac7f568, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@2b5050cb], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@72533803, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@14ef5e5d, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@29a424c3, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@5c3df82a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7a79d1a, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3980936], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:47:25.371 [http-nio-9077-exec-10] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 212, generationTokens: 58, totalTokens: 270 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@4ce2afe6 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": [
    {"city": "San Francisco", "country": "USA"},
    {"city": "Tokyo", "country": "Japan"},
    {"city": "Paris", "country": "France"}
  ],
  "unit": "C"
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:47:50.369 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:48:19.245 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@68a933c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@35ea33bd], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@145c0729, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1b3bb4a8, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4e93f2db, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1cd29b46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@68c3b2ba, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2e9bd5fe], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:48:28.881 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 155, totalTokens: 368 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@152ff70f }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.7749,
    "location": "San Francisco, CA",
    "lon": -122.4194,
    "unit": "C"
  },
  "Tokyo": {
    "lat": 35.6895,
    "location": "Tokyo, JP",
    "lon": 139.6917,
    "unit": "C"
  },
  "Paris": {
    "lat": 48.8566,
    "location": "Paris, FR",
    "lon": 2.3522,
    "unit": "C"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:48:52.221 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@68a933c, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@35ea33bd], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@145c0729, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1b3bb4a8, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@4e93f2db, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@1cd29b46, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@7f39b02c, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@7b062b13], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:48:58.739 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 134, totalTokens: 347 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@3d7a08ec }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.7749,
    "location": "San Francisco, CA",
    "lon": -122.4194
  },
  "Tokyo": {
    "lat": 35.6895,
    "location": "Tokyo, Japan",
    "lon": 139.6917
  },
  "Paris": {
    "lat": 48.8566,
    "location": "Paris, France",
    "lon": 2.3522
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:54:40.451 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:55:18.877 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@19ca0d47, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5170b749], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@44c6d9b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3aa994e7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1b33b2d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52da34cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@20a34c49, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@56dbfa16], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:55:28.864 [http-nio-9077-exec-1] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 151, totalTokens: 364 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@69defab8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.78,
    "location": "San Francisco, CA",
    "lon": -122.41,
    "unit": "C"
  },
  "Tokyo": {
    "lat": 35.6895,
    "location": "Tokyo, JP",
    "lon": 139.6917,
    "unit": "C"
  },
  "Paris": {
    "lat": 48.8566,
    "location": "Paris, FR",
    "lon": 2.3522,
    "unit": "C"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:55:49.980 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@19ca0d47, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5170b749], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@44c6d9b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3aa994e7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1b33b2d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52da34cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a32049d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@1e0d8303], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:55:55.515 [http-nio-9077-exec-3] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 116, totalTokens: 329 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6082c3c4 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.7749, "location": "San Francisco, CA", "lon": -122.4194},
  "Tokyo": {"lat": 35.6895, "location": "Tokyo, JP", "lon": 139.6917},
  "Paris": {"lat": 48.8566, "location": "Paris, France", "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:56:06.716 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@19ca0d47, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5170b749], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@44c6d9b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3aa994e7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1b33b2d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52da34cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@43f29423, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@4ef93dc4], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:56:10.752 [http-nio-9077-exec-4] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 86, totalTokens: 299 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@10b8f6d8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
    "San Francisco": {"lat": 37.78, "lon": -122.41},
    "Tokyo": {"lat": 35.6895, "lon": 139.6917},
    "Paris": {"lat": 48.8566, "lon": 2.3522}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:56:11.822 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@19ca0d47, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5170b749], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@44c6d9b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3aa994e7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1b33b2d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52da34cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@388cc15d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3cb35294], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:56:18.686 [http-nio-9077-exec-5] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 149, totalTokens: 362 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@165a49ad }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {
    "lat": 37.7749,
    "lon": -122.4194,
    "location": "San Francisco",
    "unit": "C"
  },
  "Tokyo": {
    "lat": 35.6895,
    "lon": 139.6917,
    "location": "Tokyo",
    "unit": "C"
  },
  "Paris": {
    "lat": 48.8566,
    "lon": 2.3522,
    "location": "Paris",
    "unit": "C"
  }
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:56:19.650 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@19ca0d47, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@5170b749], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@44c6d9b6, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@3aa994e7, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1b33b2d9, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@52da34cd, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@128dc5, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@42d191f], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:56:22.144 [http-nio-9077-exec-6] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 50, totalTokens: 263 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@1cad0cad }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "locations": [
    {"city": "San Francisco", "country": null},
    {"city": "Tokyo", "country": "Japan"},
    {"city": "Paris", "country": "France"}
  ]
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
2024-12-22 17:57:12.124 [main] DEBUG com.shuangqi.aiagent7.Aiagent7Application - Running with Spring Boot v3.4.1-SNAPSHOT, Spring v6.2.1
2024-12-22 17:57:40.447 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - BEFORE: AdvisedRequest[chatModel=org.springframework.ai.ollama.OllamaChatModel@7fe35c15, userText=What's the weather like in San Francisco, Tokyo, and Paris?, systemText=回答问题, chatOptions=org.springframework.ai.ollama.api.OllamaOptions@35e6c540, media=[], functionNames=[], functionCallbacks=[org.springframework.ai.model.function.FunctionInvokingFunctionCallback@fdd5c8d7], messages=[], userParams={}, systemParams={}, advisors=[org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1a2e4186, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@2ab43413, org.springframework.ai.chat.client.advisor.SafeGuardAdvisor@1f8b9f37, com.shuangqi.aiagent7.advisors.MySimplelogAdvisor@7a6d6b27, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$1@1227279d, org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec$2@19388d66], advisorParams={}, adviseContext={}, toolContext={id=1}]
2024-12-22 17:57:47.265 [http-nio-9077-exec-2] DEBUG com.shuangqi.aiagent7.advisors.MySimplelogAdvisor - AFTER: AdvisedResponse[response=ChatResponse [metadata={ id: , usage: { promptTokens: 213, generationTokens: 138, totalTokens: 351 }, rateLimit: org.springframework.ai.chat.metadata.EmptyRateLimit@6357afa8 }, generations=[Generation[assistantMessage=AssistantMessage [messageType=ASSISTANT, toolCalls=[], textContent={
  "San Francisco": {"lat": 37.784419, "location": "San Francisco, CA", "lon": -122.401376, "unit": "C"},
  "Tokyo": {"lat": 35.6895, "location": "Tokyo, JP", "lon": 139.6917, "unit": "C"},
  "Paris": {"lat": 48.8566, "location": "Paris, FR", "lon": 2.3522, "unit": "C"}
}
, metadata={messageType=ASSISTANT}], chatGenerationMetadata=ChatGenerationMetadata{finishReason=stop,contentFilterMetadata=null}]]], adviseContext={}]
